#
# VARCem	Virtual ARchaeological Computer EMulator.
#		An emulator of (mostly) x86-based PC systems and devices,
#		using the ISA,EISA,VLB,MCA  and PCI system buses, roughly
#		spanning the era between 1981 and 1995.
#
#		This file is part of the VARCem Project.
#
#		Prefix for localizing the general Makefile.mingw for local
#		settings, so we can avoid changing the main one for all of
#		our local setups.
#
# Version:	@(#)Makefile.local	1.0.5	2018/04/02
#
# Author:	Fred N. van Kempen, <decwiz@yahoo.com>
#
#		Copyright 2017,2018 Fred N. van Kempen.
#
#		Redistribution and  use  in source  and binary forms, with
#		or  without modification, are permitted  provided that the
#		following conditions are met:
#
#		1. Redistributions of  source  code must retain the entire
#		   above notice, this list of conditions and the following
#		   disclaimer.
#
#		2. Redistributions in binary form must reproduce the above
#		   copyright  notice,  this list  of  conditions  and  the
#		   following disclaimer in  the documentation and/or other
#		   materials provided with the distribution.
#
#		3. Neither the  name of the copyright holder nor the names
#		   of  its  contributors may be used to endorse or promote
#		   products  derived from  this  software without specific
#		   prior written permission.
#
# THIS SOFTWARE  IS  PROVIDED BY THE  COPYRIGHT  HOLDERS AND CONTRIBUTORS
# "AS IS" AND  ANY EXPRESS  OR  IMPLIED  WARRANTIES,  INCLUDING, BUT  NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE  ARE  DISCLAIMED. IN  NO  EVENT  SHALL THE COPYRIGHT
# HOLDER OR  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE  GOODS OR SERVICES;  LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED  AND ON  ANY
# THEORY OF  LIABILITY, WHETHER IN  CONTRACT, STRICT  LIABILITY, OR  TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING  IN ANY  WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#########################################################################
#    Anything here will override defaults in the Platform Makefile.	#
#########################################################################


# Name of the executable.
#PROG	:= yourexe

# Build Platform.
BUILD	:= mingw/Makefile.MinGW

# Various compile-time options.
# -DROM_TRACE=0xc800 traces ROM access from segment C800
# -DIO_TRACE=0x66 traces I/O on port 0x66
# -DIO_CATCH enables I/O range catch logs
STUFF	:=

# Add feature selections here.
# -DANSI_CFG			forces the config file to ANSI encoding
# -DENABLE_LOG_BREAKPOINT	enables setting of breakpoints in the logfile
# -DENABLE_PCI_LOG=n		enables logging for that module, sets level n
# -DENABLE_KEYBOARD_LOG=n	enables logging for that module, sets level n
# -DENABLE_SERIAL_LOG=n		enables logging for that module, sets level n
# -DENABLE_FDC_LOG=n		enables logging for that module, sets level n
# -DENABLE_D86F_LOG=n		enables logging for that module, sets level n
# -DENABLE_HDC_LOG=n		enables logging for that module, sets level n
# -DENABLE_HDD_LOG=n		enables logging for that module, sets level n
# -DENABLE_ZIP_LOG=n		enables logging for that module, sets level n
# -DENABLE_CDROM_LOG=n		enables logging for that module, sets level n
# -DENABLE_CDROM_IMAGE_LOG=n	enables logging for that module, sets level n
# -DENABLE_CDROM_IOCTL_LOG=n	enables logging for that module, sets level n
# -DENABLE_SOUND_EMU8K_LOG=n	enables logging for that module, sets level n
# -DENABLE_SOUND_MPU401_LOG=n	enables logging for that module, sets level n
# -DENABLE_SOUND_DEV_LOG=n	enables logging for that module, sets level n
# -DENABLE_NIC_LOG=n		enables logging for that module, sets level n
# -DENABLE_SCSI_BUS_LOG=n	enables logging for that module, sets level n
# -DENABLE_SCSI_DISK_LOG=n	enables logging for that module, sets level n
# -DENABLE_SCSI_DEV_LOG=n	enables logging for that module, sets level n
# -DENABLE_SCSI_X54X_LOG=n	enables logging for that module, sets level n
# -DENABLE_VOODOO_LOG=n		enables logging for that module, sets level n


ifeq ($(PLAT), WIN)
WX		:= n
else
WX		:= y
endif

#ifeq ($(PLAT), WIN)
# VNC_PATH	:= P:\RETRO\VNC
#else
#VNC_PATH	:= /project/retro/vnc-0.7
#endif


# Options for works-in-progress.
EXFLAGS		:=
EXPATH		:= waltje
EXINC		:= waltje
ifeq ($(PLAT), WIN)
EXOBJ		+= #win_opendir.o win_serial.o
endif
#SERIAL		:= uart.o
#EXOBJ		+= scsi_wd33c93.o

ifeq ($(WX), local)
WX_PATH         := /home/wxwidgets
WX_CONFIG	:= $(WX_PATH)/bin/wx-config
WX_FLAGS	:= -pthread \
		   -I$(WX_PATH)/lib/wx/include/gtk2-unicode-3.0 \
		   -I$(WX_PATH)/include/wx-3.0 \
		   -D_FILE_OFFSET_BITS=64 -D__WXGTK__
WX_LIBS		:= -L$(WX_PATH)/lib -pthread \
		   $(WX_PATH)/lib/libwx_gtk2u_xrc-3.0.a \
		   $(WX_PATH)/lib/libwx_gtk2u_qa-3.0.a \
		   $(WX_PATH)/lib/libwx_baseu_net-3.0.a \
		   $(WX_PATH)/lib/libwx_gtk2u_html-3.0.a \
		   $(WX_PATH)/lib/libwx_gtk2u_adv-3.0.a \
		   $(WX_PATH)/lib/libwx_gtk2u_core-3.0.a \
		   $(WX_PATH)/lib/libwx_baseu_xml-3.0.a \
		   $(WX_PATH)/lib/libwx_baseu-3.0.a \
		   -lgtk-x11-2.0 -lgdk-x11-2.0 \
		   -lpangocairo-1.0 -lpango-1.0 -latk-1.0 \
		   -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 \
		   -lgobject-2.0 -lgthread-2.0 -pthread -lglib-2.0 -lX11 \
		   -lXxf86vm -lSM -lpangocairo-1.0 \
		   -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo \
		   -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 \
		   -lpng -lz -ljpeg -lwxregexu-3.0 -lwxtiff-3.0 -lz -ldl -lm 
endif


#########################################################################
#	    Include the master Makefile.MinGW for the rest.		#
#########################################################################
ifeq ($(PLAT), WIN)
include win/mingw/Makefile.MinGW
else
include unix/Makefile.linux
endif


# Local targets.
install:	all
		@echo Installing targets..
ifeq ($(PLAT), WIN)
		@copy *.exe $(LOCAL) /y >NUL
else
endif

test:
		@echo Build=$(BUILD) Commit=$(COMMIT) Ustream=$(UPSTREAM)

pull:
		@echo Pulling from GIT master..
		@$(GIT) pull -v --progress "origin" master


# End of Makefile.waltje.
EXTRAS		:=


AUTODEP		:= n
CRASHDUMP	:= n
DEBUG		:= n
OPTIM		:= n
X64		:= n
RELEASE		:= n
USB		:= n
VNC		:= n
RDP		:= n
DEV_BUILD	:= n
DEV_BRANCH	:= n
OPENAL		:= y
FLUIDSYNTH	:= y
MUNT		:= y
PAS16		:= n
DYNAREC		:= y


#########################################################################
#	    Include the master Makefile.MinGW for the rest.		#
#########################################################################
include win/$(BUILD)


# End of Makefile.local.
