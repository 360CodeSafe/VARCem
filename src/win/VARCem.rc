/*
 * VARCem	Virtual ARchaeological Computer EMulator.
 *		An emulator of (mostly) x86-based PC systems and devices,
 *		using the ISA,EISA,VLB,MCA  and PCI system buses, roughly
 *		spanning the era between 1981 and 1995.
 *
 *		This file is part of the VARCem Project.
 *
 *		Application resource script for Windows.
 *
 * Version:	@(#)VARCem.rc	1.0.33	2018/06/16
 *
 * Author:	Fred N. van Kempen, <decwiz@yahoo.com>
 *
 *		Copyright 2017,2018 Fred N. van Kempen.
 *
 *		Redistribution and  use  in source  and binary forms, with
 *		or  without modification, are permitted  provided that the
 *		following conditions are met:
 *
 *		1. Redistributions of  source  code must retain the entire
 *		   above notice, this list of conditions and the following
 *		   disclaimer.
 *
 *		2. Redistributions in binary form must reproduce the above
 *		   copyright  notice,  this list  of  conditions  and  the
 *		   following disclaimer in  the documentation and/or other
 *		   materials provided with the distribution.
 *
 *		3. Neither the  name of the copyright holder nor the names
 *		   of  its  contributors may be used to endorse or promote
 *		   products  derived from  this  software without specific
 *		   prior written permission.
 *
 * THIS SOFTWARE  IS  PROVIDED BY THE  COPYRIGHT  HOLDERS AND CONTRIBUTORS
 * "AS IS" AND  ANY EXPRESS  OR  IMPLIED  WARRANTIES,  INCLUDING, BUT  NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE  ARE  DISCLAIMED. IN  NO  EVENT  SHALL THE COPYRIGHT
 * HOLDER OR  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE  GOODS OR SERVICES;  LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED  AND ON  ANY
 * THEORY OF  LIABILITY, WHETHER IN  CONTRACT, STRICT  LIABILITY, OR  TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING  IN ANY  WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#include <inttypes.h>
#include <windows.h>
#include "../emu.h"
#include "../version.h"
#include "../ui/ui.h"
#include "../plat.h"
#include "resource.h"


LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US

#include "../ui/lang/VARCem-EN.str"

#include "VARCem-common.rc"


MainAccel ACCELERATORS
BEGIN
#ifdef ENABLE_BUS_LOG
    VK_F1,   IDM_LOG_BUS,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_KEYBOARD_LOG
    VK_F2,   IDM_LOG_KEYBOARD,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_MOUSE_LOG
    VK_F3,   IDM_LOG_MOUSE,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_GAME_LOG
    VK_F4,   IDM_LOG_GAME,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_PARALLEL_LOG
    VK_F5,   IDM_LOG_PARALLEL,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_SERIAL_LOG
    VK_F6,   IDM_LOG_SERIAL,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_FDC_LOG
    VK_F7,   IDM_LOG_FDC,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_FDD_LOG
    VK_F8,   IDM_LOG_FDD,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_D86F_LOG
    VK_F9,   IDM_LOG_D86F,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_HDC_LOG
    VK_F10,  IDM_LOG_HDC,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_HDD_LOG
    VK_F11,  IDM_LOG_HDD,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_ZIP_LOG
    VK_F12,  IDM_LOG_ZIP,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_CDROM_LOG
    VK_F1,   IDM_LOG_CDROM,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_CDROM_IMAGE_LOG
    VK_F2,   IDM_LOG_CDROM_IMAGE,	VIRTKEY, CONTROL
#endif
#ifdef ENABLE_CDROM_IOCTL_LOG
    VK_F3,   IDM_LOG_CDROM_IOCTL,	VIRTKEY, CONTROL
#endif
#ifdef ENABLE_NETWORK_LOG
    VK_F4,   IDM_LOG_NETWORK,		VIRTKEY, CONTROL
#endif
#ifdef ENABLE_NETWORK_DEV_LOG
    VK_F5,   IDM_LOG_NETWORK_DEV,	VIRTKEY, CONTROL
#endif
# ifdef ENABLE_EMU8K_LOG
    VK_F6,   IDM_LOG_SOUND_EMU8K,	VIRTKEY, CONTROL, ALT
# endif
# ifdef ENABLE_MPU401_LOG
    VK_F7,   IDM_LOG_SOUND_MPU401,	VIRTKEY, CONTROL, ALT
# endif
# ifdef ENABLE_SOUND_DEV_LOG
    VK_F8,   IDM_LOG_SOUND_DEV,		VIRTKEY, CONTROL, ALT
# endif
# ifdef ENABLE_SCSI_BUS_LOG
    VK_F9,   IDM_LOG_SCSI_BUS,		VIRTKEY, CONTROL, ALT
# endif
# ifdef ENABLE_SCSI_DISK_LOG
    VK_F10,  IDM_LOG_SCSI_DISK,		VIRTKEY, CONTROL, ALT
# endif
# ifdef ENABLE_SCSI_DEV_LOG
    VK_F11,  IDM_LOG_SCSI_DEV,		VIRTKEY, CONTROL, ALT
# endif
# ifdef ENABLE_VOODOO_LOG
    VK_F12,  IDM_LOG_VOODOO,		VIRTKEY, CONTROL, ALT
# endif

#ifdef ENABLE_LOG_BREAKPOINT
    VK_INSERT, IDM_LOG_BREAKPOINT,	VIRTKEY, CONTROL
#endif
    VK_PRIOR,IDM_FULLSCREEN,		VIRTKEY, CONTROL, ALT
    VK_HOME, IDM_SCREENSHOT,		VIRTKEY, CONTROL
    VK_PAUSE,IDM_PAUSE,			VIRTKEY, CONTROL
END


100	ICON		"icons/varcem.ico"
#if 1
101	BITMAP		"icons/donate-button-blue-128x55.bmp"
#else
101	ICON		"icons/paypal.ico"
#endif

128	ICON		"icons/floppy_525.ico"
384	ICON		"icons/floppy_525_empty.ico"
129	ICON		"icons/floppy_525_active.ico"
385	ICON		"icons/floppy_525_empty_active.ico"
144	ICON		"icons/floppy_35.ico"
145	ICON		"icons/floppy_35_active.ico"
400	ICON		"icons/floppy_35_empty.ico"
401	ICON		"icons/floppy_35_empty_active.ico"

160	ICON		"icons/cdrom.ico"
161	ICON		"icons/cdrom_active.ico"
416	ICON		"icons/cdrom_empty.ico"
417	ICON		"icons/cdrom_empty_active.ico"

176	ICON		"icons/zip.ico"
177	ICON		"icons/zip_active.ico"
432	ICON		"icons/zip_empty.ico"
433	ICON		"icons/zip_empty_active.ico"

192	ICON		"icons/removable_disk.ico"
193	ICON		"icons/removable_disk_active.ico"
448	ICON		"icons/removable_disk_empty.ico"
449	ICON		"icons/removable_disk_empty_active.ico"

208	ICON		"icons/hard_disk.ico"
209	ICON		"icons/hard_disk_active.ico"

224	ICON		"icons/network.ico"
225	ICON		"icons/network_active.ico"

256	ICON		"icons/machine.ico"
257	ICON		"icons/display.ico"
258	ICON		"icons/input_devices.ico"
259	ICON		"icons/sound.ico"
260	ICON		"icons/network.ico"
261	ICON		"icons/ports.ico"
262	ICON		"icons/other_peripherals.ico"
263	ICON		"icons/hard_disk.ico"
264	ICON		"icons/floppy_drives.ico"
265	ICON		"icons/other_removable_devices.ico"

512	ICON		"icons/floppy_disabled.ico"
514	ICON		"icons/cdrom_disabled.ico"
515	ICON		"icons/zip_disabled.ico"


1	RT_MANIFEST	"VARCem.manifest"


VS_VERSION_INFO VERSIONINFO
#ifdef EMU_VER_PATCH
 FILEVERSION	EMU_VER_MAJOR,EMU_VER_MINOR,EMU_VER_REV,EMU_VER_PATCH
 PRODUCTVERSION	EMU_VER_MAJOR,EMU_VER_MINOR,EMU_VER_REV,EMU_VER_PATCH
#else
 FILEVERSION	EMU_VER_MAJOR,EMU_VER_MINOR,EMU_VER_REV,0
 PRODUCTVERSION	EMU_VER_MAJOR,EMU_VER_MINOR,EMU_VER_REV,0
#endif
 FILEFLAGSMASK	0x3fL
#ifndef RELEASE_BUILD
# ifdef _DEBUG
 FILEFLAGS	VS_FF_SPECIALBUILD | VS_FF_DEBUG
# else
 FILEFLAGS	VS_FF_SPECIALBUILD
# endif
#else
# ifdef _DEBUG
 FILEFLAGS	VS_FF_DEBUG
# else
 FILEFLAGS	0x0L
# endif
#endif
 FILEOS		VOS_NT_WINDOWS32
 FILETYPE	VFT_APP
 FILESUBTYPE	0x0L
 BEGIN
    BLOCK "StringFileInfo"
    BEGIN
#ifdef _MSC_VER
        BLOCK "040904b0"
#else
        BLOCK "040904e4"
#endif
        BEGIN
            VALUE "CompanyName", "IRC #VARCem on FreeNode"
            VALUE "FileDescription", "Virtual ARchaeological Computer EMulator"
            VALUE "FileVersion", EMU_VERSION
            VALUE "InternalName", EMU_NAME
            VALUE "LegalCopyright", "Copyright Fred N. van Kempen and others, 2007-2018, Released under a mixed BSD 3-Clause and GPL License"
            VALUE "OriginalFilename", "VARCem.exe"
            VALUE "ProductName", "VARCem Emulator"
            VALUE "ProductVersion", EMU_VERSION
#ifndef RELEASE_BUILD
            VALUE "SpecialBuild", "Internal Development Build"
#endif
        END
    END
    BLOCK "VarFileInfo"
    BEGIN
#ifdef _MSC_VER
        VALUE "Translation", 0x409, 65001
#else
        VALUE "Translation", 0x409, 1252
#endif
    END
END
